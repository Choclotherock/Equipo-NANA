#V.1.1.0
#Actividad de filtrado y Análisis de datos de sensores

#Importamos bibliotecas
import pandas as pd #Librería para manipulacion de datos tabulables 
import numpy as np #Libreria para calculos numericos
import matplotlib.pyplot as plt #Libreria para graficacion de datos
from scipy.signal import butter, filtfilt #Libreria para diseñar y aplicar los filtros
from scipy.fft import fft, fftfreq #Libreria para hacer analisis de frecuencias de Fourier

#1.-Cargar los 3 archivos CSV
#Primero cargamos los archivos para que los busque y lea el programa
temperatura=pd.read_csv('temperatura.csv') #Abrir el archivo de datos de temperatura
humedad=pd.read_csv('humedad.csv') #Abrir el archivo de datos de humedad
viento=pd.read_csv('viento.csv') #Abrir archivo de datos de viento


#Ajustamos nuestra escala de muestreo
inter_muestreo=5 #Intervalo de 5 segundos
frec_muestreo=1/inter_muestreo #Frecuencia en Hz para el muestreo

#Agregamos nuestra columna de tiempo en segundos para la graficacion del eje x
temperatura['Tiempo']=temperatura.index*inter_muestreo #Sacamos el tiempo multiplicando los datos del archivo por el intervalo de muestreo
humedad['Tiempo']=humedad.index*inter_muestreo
viento['Tiempo']=viento.index*inter_muestreo


#2.-Aplicar Promediado Móvil
def promediado_movil(serie, ventana=3):
    return serie.rolling(window=ventana, center=True).mean()

temperatura['Promedio'] = promediado_movil(temperatura['Temperatura_C'])
humedad['Promedio'] = promediado_movil(humedad['Humedad_Relativa_%'])
viento['Promedio'] = promediado_movil(viento['Velocidad_Viento_mps'])


#3.- Definimos nuestro filtro pasa bandas
def filtro_pbd(serie, f_baja=0.02, f_alta=0.2, orden=4):
    b, a = butter(orden, [f_baja, f_alta], btype= 'band')
    return filtfilt(b,a,serie)

temperatura['Pasa_Bandas'] = filtro_pbd(temperatura['Temperatura_C'])
humedad['Pasa_Bandas'] = filtro_pbd(humedad['Humedad_Relativa_%'])
viento['Pasa_Bandas'] = filtro_pbd(viento['Velocidad_Viento_mps'])

#Definimos filtro pasa bajas
def filtro_pbj(serie, fc=0.1, orden=4):
    b, a = butter(orden, fc, btype='low')
    return filtfilt(b, a, serie)

temperatura['Pasa_Bajas'] = filtro_pbj(temperatura['Temperatura_C'])
humedad['Pasa_Bajas'] = filtro_pbj(humedad['Humedad_Relativa_%'])
viento['Pasa_Bajas'] = filtro_pbj(viento['Velocidad_Viento_mps'])

#Análisis de fourier
def calculo_fft(serie):
    N=len(serie)
    frec= fftfreq(N, d=1/frec_muestreo)[:N//2]
    magnitud= np.abs(fft(serie))[:N//2]
    return frec, magnitud

#4.-Graficamos todos los datos
def graficar_todo(df, columna, nombre_sensor):
    tiempo = df['Tiempo']
    original = df[columna]
    promedio = df['Promedio']
    baja = df['Pasa_Bajas']
    banda = df['Pasa_Bandas']

    plt.figure(figsize=(12, 8))
    plt.plot(tiempo, original, label='Original')
    plt.plot(tiempo, promedio, '--', label='Promediado')
    plt.plot(tiempo, baja, '--', label='Pasa Bajas')
    plt.plot(tiempo, banda, ':', label='Pasa Bandas')
    plt.title(f'{nombre_sensor} - Señales Procesadas')
    plt.xlabel('Tiempo (s)')
    plt.ylabel(nombre_sensor)
    plt.legend()
    plt.grid(True)
    plt.tight_layout()
    plt.show()

    # FFT
    f_orig, y_orig = calculo_fft(original)
    f_baja, y_baja = calculo_fft(baja)
    f_banda, y_banda = calculo_fft(banda)

    plt.figure(figsize=(10, 5))
    plt.plot(f_orig, y_orig, label='Original')
    plt.plot(f_baja, y_baja, label='Pasa Bajas', linestyle='--')
    plt.plot(f_banda, y_banda, label='Pasa Bandas', linestyle=':')
    plt.title(f'{nombre_sensor} - Espectro de Frecuencia')
    plt.xlabel('Frecuencia (Hz)')
    plt.ylabel('Magnitud')
    plt.legend()
    plt.grid(True)
    plt.tight_layout()
    plt.show()
#Ejecutamos para cada uno de los sensores
graficar_todo(temperatura, 'Temperatura_C', 'Temperatura')
graficar_todo(humedad, 'Humedad_Relativa_%', 'Humedad')
graficar_todo(viento, 'Velocidad_Viento_mps', 'Viento')


